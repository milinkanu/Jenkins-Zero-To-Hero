pipeline {
  agent {
    docker {
      image 'milinkanu1/maven-agent:v1'
      args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
    }
  }
  stages {
    stage('Checkout') {
      steps {
        sh 'echo passed'
        //git branch: 'main', url: 'https://github.com/milinkanu/Jenkins-Zero-To-Hero.git'
      }
    }
    stage('Build and Test') {
      steps {
        sh 'ls -ltr'
        // build the project and create a JAR file
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn clean package'
      }
    }
    stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://13.221.82.81:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app && mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
    stage('Build and Push Docker Image') {
  environment {
    DOCKER_IMAGE = "milinkanu1/ultimate-cicd:${BUILD_NUMBER}"
  }
  steps {
    withCredentials([usernamePassword(credentialsId: 'docker-cred', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
      script {
        sh 'cd java-maven-sonar-argocd-helm-k8s/spring-boot-app'

        // Login to Docker using credentials
        sh 'echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin'

        // Build the Docker image
        sh 'docker build -t ${DOCKER_IMAGE} java-maven-sonar-argocd-helm-k8s/spring-boot-app'

        // Push the image to Docker Hub
        sh 'docker push ${DOCKER_IMAGE}'
      }
    }
  }
}

    stage('Update Deployment File') {
        environment {
            GIT_REPO_NAME = "Jenkins-Zero-To-Hero"
            GIT_USER_NAME = "milinkanu"
        }
        steps {
          withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
            withEnv(["GIT_PUSH_URL=https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}"]) {
              sh """
                sed -i 's|replaceImageTag|${BUILD_NUMBER}|g' java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                git config user.email "milinrkanu999@gmail.com"
                git config user.name "Milin Kanu"
                git add java-maven-sonar-argocd-helm-k8s/spring-boot-app-manifests/deployment.yml
                git commit -m "Update deployment image to version ${BUILD_NUMBER}" || echo 'Nothing to commit'
                git push \$GIT_PUSH_URL HEAD:main
              """
            }
          }

        }

        }
    }
  }
}
